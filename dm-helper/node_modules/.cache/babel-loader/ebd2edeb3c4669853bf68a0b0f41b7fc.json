{"ast":null,"code":"var _jsxFileName = \"Z:\\\\DM Helper\\\\Frontend\\\\dm-helper\\\\src\\\\Pages\\\\Generators\\\\NpcGen\\\\RandomNpc.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport GenTextBox from '../../../Components/TextBox/GenTextBox';\nimport Button from '../../../Components/Buttons/Button';\nimport { races } from \"./Arrays\";\nimport { setNames, setAges, setGenders, setJobs, setTraits, setHairColors, setHairLengths, setHairTextures, setSkinColors, setSkinFeatures } from \"./Functions\";\nimport \"./RandomNpc.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenBoxContainerStyle = {\n  width: \"635px\",\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  backgroundColor: \"black\",\n  color: \"white\",\n  border: \"3px solid black\",\n  textAlign: \"center\"\n};\n\nconst RandomNpc = () => {\n  _s();\n\n  const [npc, setNpc] = useState({\n    race: \"\",\n    name: \"\",\n    age: \"\",\n    gender: \"\",\n    job: \"\",\n    trait: \"\",\n    skinColor: \"\",\n    skinFeature: \"\",\n    hairColor: \"\",\n    hairTexture: \"\",\n    hairLength: \"\",\n    eyecolor: \"\"\n  });\n  useEffect(() => {\n    setName(setNames(race, gender)); // setAge(setAges(race))\n  }, [race]);\n  useEffect(() => {\n    npcGen();\n  }, []);\n\n  const npcGen = () => {\n    setNpc(prevState => ({ ...prevState,\n      gender: setGenders()\n    }));\n    setNpc(prevState => ({ ...prevState,\n      race: races[Math.floor(Math.random() * races.length)]\n    }));\n    setNpc(prevState => ({ ...prevState,\n      job: setJobs()\n    }));\n    setNpc(prevState => ({ ...prevState,\n      trait: setTraits()\n    }));\n    setNpc(prevState => ({ ...prevState,\n      skinColor: setSkinColors()\n    }));\n    setNpc(prevState => ({ ...prevState,\n      skinFeature: setSkinFeatures()\n    }));\n    setNpc(prevState => ({ ...prevState,\n      hairColor: setHairColors()\n    }));\n    setNpc(prevState => ({ ...prevState,\n      hairTexture: setHairTextures()\n    }));\n    setNpc(prevState => ({ ...prevState,\n      hairLength: setHairLengths()\n    }));\n    setNpc(prevState => ({ ...prevState,\n      eyeColor: setHairColors()\n    }));\n  };\n\n  const onClick = event => {\n    event.preventDefault();\n    const elem = event.currentTarget;\n    if (!(elem instanceof HTMLButtonElement)) return;\n\n    if (elem.value === \"Race\") {\n      setNpc(prevState => ({ ...prevState,\n        race: races[Math.floor(Math.random() * races.length)]\n      }));\n    } else if (elem.value === \"Name\") {\n      setNpc(prevState => ({ ...prevState,\n        name: setNames(npc.race, npc.gender)\n      }));\n    } else if (elem.value === \"Gender\") {\n      setNpc(prevState => ({ ...prevState,\n        gender: setGenders()\n      }));\n    } else if (elem.value === \"Job\") {\n      setNpc(prevState => ({ ...prevState,\n        job: setJobs()\n      }));\n    } else if (elem.value === \"Age\") {\n      setNpc(prevState => ({ ...prevState,\n        age: setAges(npc.race)\n      }));\n    } else if (elem.value === \"Traits\") {\n      setNpc(prevState => ({ ...prevState,\n        trait: setTraits()\n      }));\n    } else if (elem.value === \"Skin Color\") {\n      setNpc(prevState => ({ ...prevState,\n        skinColor: setSkinColors()\n      }));\n    } else if (elem.value === \"Skin Feature\") {\n      setNpc(prevState => ({ ...prevState,\n        skinFeature: setSkinFeatures()\n      }));\n    } else if (elem.value === \"Hair Color\") {\n      setNpc(prevState => ({ ...prevState,\n        hairColor: setHairColors()\n      }));\n    } else if (elem.value === \"Hair Texture\") {\n      setNpc(prevState => ({ ...prevState,\n        hairTexture: setHairTextures()\n      }));\n    } else if (elem.value === \"Hair Length\") {\n      setNpc(prevState => ({ ...prevState,\n        hairLength: setHairLengths()\n      }));\n    } else if (elem.value === \"Eye Color\") {\n      setNpc(prevState => ({ ...prevState,\n        eyeColor: setHairColors()\n      }));\n    }\n  };\n\n  const textExport = () => {// navigator.clipboard.writeText(`Name: ${name} Race: ${race} Gender: ${gender} Profession: ${job} Age: ${age} Personality Trait ${trait} \n    // Skin Color: ${look[0]} Skin Feature: ${look[1]} Hair Color: ${look[2]} Hair Texture: ${look[3]} Hair Length: ${look[4]} Eye Color: ${look[5]}`)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"npc\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: GenBoxContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          width: \"600px\"\n        },\n        children: \"General Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: name,\n        text: \"Name: \",\n        onClick: onClick,\n        value: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: race,\n        text: \"Race: \",\n        onClick: onClick,\n        value: \"Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: npc.gender,\n        text: \"Gender: \",\n        onClick: onClick,\n        value: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: job,\n        text: \"Profession: \",\n        onClick: onClick,\n        value: \"Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: age,\n        text: \"Age: \",\n        onClick: onClick,\n        value: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: trait,\n        text: \"Personality Trait: \",\n        onClick: onClick,\n        value: \"Traits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: GenBoxContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          width: \"600px\"\n        },\n        children: \"Appearance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: skinColor,\n        text: \"Skin Color: \",\n        onClick: onClick,\n        value: \"Skin Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: skinFeature,\n        text: \"Skin Feature: \",\n        onClick: onClick,\n        value: \"Skin Feature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: hairColor,\n        text: \"Hair Color: \",\n        onClick: onClick,\n        value: \"Hair Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: hairTexture,\n        text: \"Hair Texture: \",\n        onClick: onClick,\n        value: \"Hair Texture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: hairLength,\n        text: \"Hair Length: \",\n        onClick: onClick,\n        value: \"Hair Length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: eyeColor,\n        text: \"Eye Color: \",\n        onClick: onClick,\n        value: \"Eye Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: \"New NPC\",\n          onClick: npcGen,\n          value: \"new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Export\",\n          onClick: textExport,\n          value: \"new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RandomNpc, \"GLglZAY0TiHULN2urXGl11NJpSI=\");\n\n_c = RandomNpc;\nexport default RandomNpc;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomNpc\");","map":{"version":3,"sources":["Z:/DM Helper/Frontend/dm-helper/src/Pages/Generators/NpcGen/RandomNpc.tsx"],"names":["React","useState","useEffect","GenTextBox","Button","races","setNames","setAges","setGenders","setJobs","setTraits","setHairColors","setHairLengths","setHairTextures","setSkinColors","setSkinFeatures","GenBoxContainerStyle","width","display","flexWrap","justifyContent","alignItems","backgroundColor","color","border","textAlign","RandomNpc","npc","setNpc","race","name","age","gender","job","trait","skinColor","skinFeature","hairColor","hairTexture","hairLength","eyecolor","setName","npcGen","prevState","Math","floor","random","length","eyeColor","onClick","event","preventDefault","elem","currentTarget","HTMLButtonElement","value","textExport"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, MouseEvent } from 'react';\r\nimport CSS from 'csstype'\r\nimport GenTextBox from '../../../Components/TextBox/GenTextBox';\r\nimport Button from '../../../Components/Buttons/Button';\r\nimport { races } from \"./Arrays\"\r\nimport { setNames, setAges, setGenders, setJobs, setTraits, setLooks, setEyeColors, setHairColors, setHairLengths, setHairTextures, setSkinColors, setSkinFeatures } from \"./Functions\"\r\nimport \"./RandomNpc.css\"\r\n\r\nconst GenBoxContainerStyle: CSS.Properties = {\r\n    width: \"635px\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    border: \"3px solid black\",\r\n    textAlign: \"center\",\r\n}\r\n\r\nconst RandomNpc = () => {\r\n\r\n    const [npc, setNpc] = useState({ \r\n        race: \"\",\r\n        name: \"\",\r\n        age: \"\",\r\n        gender: \"\",\r\n        job: \"\",\r\n        trait: \"\",\r\n        skinColor: \"\",\r\n        skinFeature: \"\",\r\n        hairColor: \"\",\r\n        hairTexture: \"\",\r\n        hairLength: \"\",\r\n        eyecolor: \"\",\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setName(setNames(race, gender))\r\n        // setAge(setAges(race))\r\n        \r\n    },[race]);\r\n    useEffect(() => {\r\n        npcGen()\r\n    }, [])\r\n\r\n\r\n\r\n    const npcGen = () => {\r\n        setNpc(prevState => ({...prevState, gender: (setGenders())}))\r\n        setNpc(prevState => ({...prevState, race: (races[Math.floor(Math.random() * races.length)])}))\r\n        setNpc(prevState => ({...prevState, job: (setJobs())}))\r\n        setNpc(prevState => ({...prevState, trait: (setTraits())}))\r\n        setNpc(prevState => ({...prevState, skinColor: (setSkinColors())}))\r\n        setNpc(prevState => ({...prevState, skinFeature: (setSkinFeatures())}))\r\n        setNpc(prevState => ({...prevState, hairColor: setHairColors()}))\r\n        setNpc(prevState => ({...prevState, hairTexture: setHairTextures()}))\r\n        setNpc(prevState => ({...prevState, hairLength: setHairLengths()}))\r\n        setNpc(prevState => ({...prevState, eyeColor: setHairColors()}))\r\n    }\r\n\r\n    const onClick = (event : MouseEvent) => {\r\n        event.preventDefault();\r\n        const elem = event.currentTarget\r\n        if(!(elem instanceof HTMLButtonElement)) return;\r\n\r\n        if(elem.value === \"Race\"){setNpc(prevState => ({...prevState, race: (races[Math.floor(Math.random() * races.length)])}))}\r\n        else if(elem.value === \"Name\"){setNpc(prevState => ({...prevState, name: (setNames(npc.race, npc.gender))}))}\r\n        else if(elem.value === \"Gender\"){setNpc(prevState => ({...prevState, gender: (setGenders())}))}\r\n        else if(elem.value === \"Job\"){setNpc(prevState => ({...prevState, job: (setJobs())}))}\r\n        else if(elem.value === \"Age\"){setNpc(prevState => ({...prevState, age: (setAges(npc.race))}))}\r\n        else if(elem.value === \"Traits\"){setNpc(prevState => ({...prevState, trait: (setTraits())}))}\r\n        else if(elem.value === \"Skin Color\"){setNpc(prevState => ({...prevState, skinColor: (setSkinColors())}))}\r\n        else if(elem.value === \"Skin Feature\"){setNpc(prevState => ({...prevState, skinFeature: (setSkinFeatures())}))}\r\n        else if(elem.value === \"Hair Color\"){setNpc(prevState => ({...prevState, hairColor: setHairColors()}))}\r\n        else if(elem.value === \"Hair Texture\"){setNpc(prevState => ({...prevState, hairTexture: setHairTextures()}))}\r\n        else if(elem.value === \"Hair Length\"){setNpc(prevState => ({...prevState, hairLength: setHairLengths()}))}\r\n        else if(elem.value === \"Eye Color\"){setNpc(prevState => ({...prevState, eyeColor: setHairColors()}))}\r\n    }\r\n    \r\n    const textExport = () =>{\r\n        // navigator.clipboard.writeText(`Name: ${name} Race: ${race} Gender: ${gender} Profession: ${job} Age: ${age} Personality Trait ${trait} \r\n        // Skin Color: ${look[0]} Skin Feature: ${look[1]} Hair Color: ${look[2]} Hair Texture: ${look[3]} Hair Length: ${look[4]} Eye Color: ${look[5]}`)\r\n    }\r\n    \r\n    \r\n    return(\r\n        <div className =\"npc\">\r\n            <div style={GenBoxContainerStyle}>\r\n                <h1 style={{width: \"600px\"}}>General Info</h1>\r\n                <GenTextBox className=\"npcBox\"payload={name}text=\"Name: \" onClick={onClick} value=\"Name\"/>\r\n                <GenTextBox className=\"npcBox\"payload={race}text=\"Race: \" onClick={onClick} value= \"Race\"/>\r\n                <GenTextBox className=\"npcBox\"payload={npc.gender}text=\"Gender: \" onClick={onClick} value= \"Gender\"/>\r\n                <GenTextBox className=\"npcBox\"payload={job}text=\"Profession: \" onClick={onClick}  value=\"Job\"/>\r\n                <GenTextBox className=\"npcBox\"payload={age}text=\"Age: \"  onClick={onClick} value=\"Age\"/>\r\n                <GenTextBox className=\"npcBox\"payload={trait}text=\"Personality Trait: \" onClick={onClick} value=\"Traits\"/>\r\n            </div>\r\n            <div style={GenBoxContainerStyle}>\r\n                <h1 style={{width: \"600px\"}}>Appearance</h1>\r\n                <GenTextBox className=\"npcBox\"payload={skinColor}text=\"Skin Color: \" onClick={onClick} value=\"Skin Color\"/>\r\n                <GenTextBox className=\"npcBox\"payload={skinFeature}text=\"Skin Feature: \" onClick={onClick} value=\"Skin Feature\"/>\r\n                <GenTextBox className=\"npcBox\"payload={hairColor}text=\"Hair Color: \" onClick={onClick} value=\"Hair Color\"/>\r\n                <GenTextBox className=\"npcBox\"payload={hairTexture}text=\"Hair Texture: \" onClick={onClick} value=\"Hair Texture\"/>\r\n                <GenTextBox className=\"npcBox\"payload={hairLength}text=\"Hair Length: \" onClick={onClick} value=\"Hair Length\"/>\r\n                <GenTextBox className=\"npcBox\"payload={eyeColor}text=\"Eye Color: \" onClick={onClick} value=\"Eye Color\"/>\r\n                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                    <Button  text=\"New NPC\"onClick={npcGen} value=\"new\"/>\r\n                    <Button text=\"Export\"onClick={textExport} value=\"new\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default RandomNpc"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"Z:\\\\DM Helper\\\\Frontend\\\\dm-helper\\\\src\\\\Pages\\\\Generators\\\\NpcGen\\\\RandomNpc.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport GenTextBox from '../../../Components/TextBox/GenTextBox';\nimport { races } from \"./Arrays\";\nimport { setNames, setAges, setGenders, setJobs, setTraits, setLooks } from \"./Functions\";\nimport \"./RandomNpc.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomNpc = () => {\n  _s();\n\n  const [race, setRace] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState();\n  const [gender, setGender] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [trait, setTrait] = useState(\"\");\n  const [skinColor, setSkinColor] = useState(\"\");\n  const [skinFeature, setSkinFeature] = useState(\"\");\n  const [hairColor, setHairColor] = useState(\"\");\n  const [hairTexture, setHairTexture] = useState(\"\");\n  const [hairLength, setHairLength] = useState(\"\");\n  const [eyeColor, setEyeColor] = useState(\"\");\n  const [look, setLook] = useState([]);\n  useEffect(() => {\n    setName(setNames(race));\n    setAge(setAges(race));\n  }, [race]);\n\n  const npcGen = () => {\n    setRace(races[Math.floor(Math.random() * races.length)]);\n    setGender(setGenders());\n    setJob(setJobs());\n    setTrait(setTraits());\n    setLook(setLooks());\n  };\n\n  const clickHandle = payload => {\n    if (payload === \"Race\") {\n      setRace(races[Math.floor(Math.random() * races.length)]);\n    } else if (payload === \"Name\") {\n      setName(setNames(race));\n    } else if (payload === \"Gender\") {\n      setGender(setGenders());\n    } else if (payload === \"Job\") {\n      setJob(setJobs());\n    } else if (payload === \"Age\") {\n      setAge(setAges(race));\n    } else if (payload === \"Traits\") {\n      setTrait(setTraits());\n    }\n  };\n\n  const textExport = () => {\n    navigator.clipboard.writeText(`Name: ${name} Race: ${race} Gender: ${gender} Profession: ${job} Age: ${age} Personality Trait ${trait} \n        Skin Color: ${look[0]} Skin Feature: ${look[1]} Hair Color: ${look[2]} Hair Texture: ${look[3]} Hair Length: ${look[4]} Eye Color: ${look[5]}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"npc\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"npcBoxContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"npcBoxHeader\",\n        children: \"General Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: name,\n        text: \"Name: \",\n        onClick: () => clickHandle(\"Name\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: race,\n        text: \"Race: \",\n        onClick: () => clickHandle(\"Race\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: gender,\n        text: \"Gender: \",\n        onClick: () => clickHandle(\"Gender\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: job,\n        text: \"Profession: \",\n        onClick: () => clickHandle(\"Job\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: age,\n        text: \"Age: \",\n        onClick: () => clickHandle(\"Age\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: trait,\n        text: \"Personality Trait: \",\n        onClick: () => clickHandle(\"Traits\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"npcBoxContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"npcBoxHeader\",\n        children: \"Appearance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: skinColor,\n        text: \"Skin Color: \",\n        onClick: () => clickHandle(\"Skin Color\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: skinFeature,\n        text: \"Skin Feature: \",\n        onClick: () => clickHandle(\"Skin Feature\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: hairColor,\n        text: \"Hair Color: \",\n        onClick: () => clickHandle(\"Hair Color\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: hairTexture,\n        text: \"Hair Texture: \",\n        onClick: () => clickHandle(\"Hair Texture\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: hairLength,\n        text: \"Hair Length: \",\n        onClick: () => clickHandle(\"Hair Length\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GenTextBox, {\n        className: \"npcBox\",\n        payload: look[5],\n        text: \"Eye Color: \",\n        onClick: () => clickHandle(\"Eye Color\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => npcGen(),\n        className: \"npcContainerButton\",\n        children: \"New NPC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => textExport(),\n        className: \"npcContainerButton\",\n        children: \"Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RandomNpc, \"mNZ33M3qjSAQYbZIJPdhnYPOi/4=\");\n\n_c = RandomNpc;\nexport default RandomNpc;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomNpc\");","map":{"version":3,"sources":["Z:/DM Helper/Frontend/dm-helper/src/Pages/Generators/NpcGen/RandomNpc.tsx"],"names":["React","useState","useEffect","GenTextBox","races","setNames","setAges","setGenders","setJobs","setTraits","setLooks","RandomNpc","race","setRace","name","setName","age","setAge","gender","setGender","job","setJob","trait","setTrait","skinColor","setSkinColor","skinFeature","setSkinFeature","hairColor","setHairColor","hairTexture","setHairTexture","hairLength","setHairLength","eyeColor","setEyeColor","look","setLook","npcGen","Math","floor","random","length","clickHandle","payload","textExport","navigator","clipboard","writeText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GenTextBox from '../../../Components/TextBox/GenTextBox';\r\nimport { races } from \"./Arrays\"\r\nimport { setNames, setAges, setGenders, setJobs, setTraits, setLooks } from \"./Functions\"\r\nimport \"./RandomNpc.css\"\r\n\r\nconst RandomNpc = () => {\r\n\r\n    const [race, setRace] = useState<string>(\"\")\r\n    const [name, setName] = useState<string>(\"\")\r\n    const [age, setAge] = useState<number>()\r\n    const [gender, setGender] = useState<string>(\"\")\r\n    const [job, setJob] = useState<string>(\"\")\r\n    const [trait, setTrait] = useState<string>(\"\")\r\n\r\n    const [skinColor, setSkinColor] = useState<string>(\"\")\r\n    const [skinFeature, setSkinFeature] = useState<string>(\"\")\r\n    const [hairColor, setHairColor] = useState<string>(\"\")\r\n    const [hairTexture, setHairTexture] = useState<string>(\"\")\r\n    const [hairLength, setHairLength] = useState<string>(\"\")\r\n    const [eyeColor, setEyeColor] = useState<string>(\"\")\r\n    \r\n    const [look, setLook] = useState<string[]>([])\r\n\r\n    useEffect(() => {\r\n        setName(setNames(race))\r\n        setAge(setAges(race))\r\n        \r\n    },[race]);\r\n\r\n    const npcGen = () => {\r\n        setRace(races[Math.floor(Math.random() * races.length)])\r\n        setGender(setGenders())\r\n        setJob(setJobs())\r\n        setTrait(setTraits())\r\n        setLook(setLooks())\r\n        \r\n    }\r\n    const clickHandle = (payload: string) => {\r\n        if(payload === \"Race\"){\r\n            setRace(races[Math.floor(Math.random() * races.length)])\r\n        }\r\n        else if(payload === \"Name\"){\r\n            setName(setNames(race))\r\n        }\r\n        else if(payload === \"Gender\"){\r\n            setGender(setGenders())\r\n        }\r\n        else if(payload === \"Job\"){\r\n            setJob(setJobs())\r\n        }\r\n        else if(payload === \"Age\"){\r\n            setAge(setAges(race))\r\n        }\r\n        else if(payload === \"Traits\"){\r\n            setTrait(setTraits())\r\n        }\r\n    }\r\n    \r\n    const textExport = () =>{\r\n        navigator.clipboard.writeText(`Name: ${name} Race: ${race} Gender: ${gender} Profession: ${job} Age: ${age} Personality Trait ${trait} \r\n        Skin Color: ${look[0]} Skin Feature: ${look[1]} Hair Color: ${look[2]} Hair Texture: ${look[3]} Hair Length: ${look[4]} Eye Color: ${look[5]}`)\r\n    }\r\n    \r\n    \r\n    return(\r\n        <div className =\"npc\">\r\n            <div className=\"npcBoxContainer\">\r\n                <h1 className=\"npcBoxHeader\">General Info</h1>\r\n                <GenTextBox className=\"npcBox\"payload={name}text=\"Name: \" onClick={() => clickHandle(\"Name\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={race}text=\"Race: \" onClick={() => clickHandle(\"Race\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={gender}text=\"Gender: \" onClick={() => clickHandle(\"Gender\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={job}text=\"Profession: \" onClick={() => clickHandle(\"Job\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={age}text=\"Age: \"  onClick={() => clickHandle(\"Age\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={trait}text=\"Personality Trait: \" onClick={() => clickHandle(\"Traits\")}/>\r\n            </div>\r\n            <div className=\"npcBoxContainer\">\r\n                <h1 className=\"npcBoxHeader\">Appearance</h1>\r\n                <GenTextBox className=\"npcBox\"payload={skinColor}text=\"Skin Color: \" onClick={() => clickHandle(\"Skin Color\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={skinFeature}text=\"Skin Feature: \" onClick={() => clickHandle(\"Skin Feature\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={hairColor}text=\"Hair Color: \" onClick={() => clickHandle(\"Hair Color\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={hairTexture}text=\"Hair Texture: \" onClick={() => clickHandle(\"Hair Texture\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={hairLength}text=\"Hair Length: \" onClick={() => clickHandle(\"Hair Length\")}/>\r\n                <GenTextBox className=\"npcBox\"payload={look[5]}text=\"Eye Color: \" onClick={() => clickHandle(\"Eye Color\")}/>\r\n                <button onClick={ () => npcGen()}className=\"npcContainerButton\">New NPC</button>\r\n                <button onClick={ () => textExport()}className=\"npcContainerButton\">Export</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default RandomNpc"]},"metadata":{},"sourceType":"module"}